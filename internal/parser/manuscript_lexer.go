// Code generated from ManuscriptLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ManuscriptLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ManuscriptLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func manuscriptlexerLexerInit() {
	staticData := &ManuscriptLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "SINGLE_STRING_MODE", "MULTI_STRING_MODE", "DOUBLE_STRING_MODE",
		"INTERPOLATION_MODE",
	}
	staticData.LiteralNames = []string{
		"", "", "", "", "'let'", "'fn'", "'return'", "'yield'", "'type'", "'interface'",
		"'import'", "'export'", "'extern'", "'void'", "'check'", "'try'", "'catch'",
		"'in'", "'as'", "'is'", "'extends'", "'from'", "'null'", "'if'", "'else'",
		"'for'", "'while'", "'true'", "'false'", "'match'", "'case'", "'async'",
		"'await'", "'methods'", "'self'", "", "", "'['", "']'", "'('", "')'",
		"'<'", "'>'", "'<='", "'>='", "':'", "';'", "','", "'='", "'=='", "'+'",
		"'-'", "'++'", "'--'", "'||'", "'&&'", "'*'", "'/'", "'!'", "'?'", "'.'",
		"'!='", "'|'", "'&'", "'^'",
	}
	staticData.SymbolicNames = []string{
		"", "WS", "COMMENT", "MULTI_LINE_COMMENT", "LET", "FN", "RETURN", "YIELD",
		"TYPE", "INTERFACE", "IMPORT", "EXPORT", "EXTERN", "VOID", "CHECK",
		"TRY", "CATCH", "IN", "AS", "IS", "EXTENDS", "FROM", "NULL", "IF", "ELSE",
		"FOR", "WHILE", "TRUE", "FALSE", "MATCH", "CASE", "ASYNC", "AWAIT",
		"METHODS", "SELF", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "LPAREN", "RPAREN",
		"LT", "GT", "LT_EQUALS", "GT_EQUALS", "COLON", "SEMICOLON", "COMMA",
		"EQUALS", "EQUALS_EQUALS", "PLUS", "MINUS", "PLUS_PLUS", "MINUS_MINUS",
		"PIPE_PIPE", "AMP_AMP", "STAR", "SLASH", "EXCLAMATION", "QUESTION",
		"DOT", "NEQ", "PIPE", "AMP", "CARET", "HEX_LITERAL", "BINARY_LITERAL",
		"FLOAT", "INTEGER", "ID", "SINGLE_QUOTE_START", "MULTI_QUOTE_START",
		"DOUBLE_QUOTE_START", "SINGLE_STR_INTERP_START", "SINGLE_STR_CONTENT",
		"SINGLE_STR_END", "MULTI_STR_INTERP_START", "MULTI_STR_CONTENT", "MULTI_STR_END",
		"DOUBLE_STR_INTERP_START", "DOUBLE_STR_CONTENT", "DOUBLE_STR_END", "INTERP_LBRACE",
		"INTERP_RBRACE", "INTERP_WS",
	}
	staticData.RuleNames = []string{
		"WS", "COMMENT", "MULTI_LINE_COMMENT", "LET", "FN", "RETURN", "YIELD",
		"TYPE", "INTERFACE", "IMPORT", "EXPORT", "EXTERN", "VOID", "CHECK",
		"TRY", "CATCH", "IN", "AS", "IS", "EXTENDS", "FROM", "NULL", "IF", "ELSE",
		"FOR", "WHILE", "TRUE", "FALSE", "MATCH", "CASE", "ASYNC", "AWAIT",
		"METHODS", "SELF", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "LPAREN", "RPAREN",
		"LT", "GT", "LT_EQUALS", "GT_EQUALS", "COLON", "SEMICOLON", "COMMA",
		"EQUALS", "EQUALS_EQUALS", "PLUS", "MINUS", "PLUS_PLUS", "MINUS_MINUS",
		"PIPE_PIPE", "AMP_AMP", "STAR", "SLASH", "EXCLAMATION", "QUESTION",
		"DOT", "NEQ", "PIPE", "AMP", "CARET", "HEX_LITERAL", "BINARY_LITERAL",
		"FLOAT", "INTEGER", "ID", "ESC_SEQ", "INTERP_START", "SINGLE_QUOTE_START",
		"MULTI_QUOTE_START", "DOUBLE_QUOTE_START", "SINGLE_STR_INTERP_START",
		"SINGLE_STR_CONTENT", "SINGLE_STR_END", "MULTI_STR_INTERP_START", "MULTI_STR_CONTENT",
		"MULTI_STR_END", "DOUBLE_STR_INTERP_START", "DOUBLE_STR_CONTENT", "DOUBLE_STR_END",
		"INTERP_LBRACE", "INTERP_RBRACE", "INTERP_WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 84, 611, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7,
		1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7,
		7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2,
		13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18,
		7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7,
		23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28,
		2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2,
		34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39,
		7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7,
		44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49,
		2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2,
		55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60,
		7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7,
		65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70,
		2, 71, 7, 71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2,
		76, 7, 76, 2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81,
		7, 81, 2, 82, 7, 82, 2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7, 85, 1, 0, 4,
		0, 179, 8, 0, 11, 0, 12, 0, 180, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 5,
		1, 189, 8, 1, 10, 1, 12, 1, 192, 9, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
		2, 5, 2, 200, 8, 2, 10, 2, 12, 2, 203, 9, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
		2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1,
		5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1,
		7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1,
		16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1,
		29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31,
		1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1,
		32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35,
		1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1,
		41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45,
		1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1,
		50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53,
		1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1,
		58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63,
		1, 63, 1, 64, 1, 64, 1, 64, 1, 64, 4, 64, 451, 8, 64, 11, 64, 12, 64, 452,
		1, 65, 1, 65, 1, 65, 1, 65, 1, 65, 5, 65, 460, 8, 65, 10, 65, 12, 65, 463,
		9, 65, 1, 66, 4, 66, 466, 8, 66, 11, 66, 12, 66, 467, 1, 66, 1, 66, 5,
		66, 472, 8, 66, 10, 66, 12, 66, 475, 9, 66, 1, 66, 1, 66, 3, 66, 479, 8,
		66, 1, 66, 4, 66, 482, 8, 66, 11, 66, 12, 66, 483, 3, 66, 486, 8, 66, 1,
		66, 1, 66, 4, 66, 490, 8, 66, 11, 66, 12, 66, 491, 1, 66, 1, 66, 3, 66,
		496, 8, 66, 1, 66, 4, 66, 499, 8, 66, 11, 66, 12, 66, 500, 3, 66, 503,
		8, 66, 1, 66, 4, 66, 506, 8, 66, 11, 66, 12, 66, 507, 1, 66, 1, 66, 3,
		66, 512, 8, 66, 1, 66, 4, 66, 515, 8, 66, 11, 66, 12, 66, 516, 3, 66, 519,
		8, 66, 1, 67, 4, 67, 522, 8, 67, 11, 67, 12, 67, 523, 1, 68, 1, 68, 5,
		68, 528, 8, 68, 10, 68, 12, 68, 531, 9, 68, 1, 69, 1, 69, 1, 69, 1, 70,
		1, 70, 1, 70, 1, 71, 1, 71, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 72, 1,
		72, 1, 72, 1, 73, 1, 73, 1, 73, 1, 73, 1, 74, 1, 74, 1, 74, 1, 74, 1, 75,
		1, 75, 4, 75, 559, 8, 75, 11, 75, 12, 75, 560, 1, 76, 1, 76, 1, 76, 1,
		76, 1, 77, 1, 77, 1, 77, 1, 77, 1, 78, 1, 78, 4, 78, 573, 8, 78, 11, 78,
		12, 78, 574, 1, 79, 1, 79, 1, 79, 1, 79, 1, 79, 1, 79, 1, 80, 1, 80, 1,
		80, 1, 80, 1, 81, 1, 81, 4, 81, 589, 8, 81, 11, 81, 12, 81, 590, 1, 82,
		1, 82, 1, 82, 1, 82, 1, 83, 1, 83, 1, 83, 1, 83, 1, 84, 1, 84, 1, 84, 1,
		84, 1, 85, 4, 85, 606, 8, 85, 11, 85, 12, 85, 607, 1, 85, 1, 85, 1, 201,
		0, 86, 5, 1, 7, 2, 9, 3, 11, 4, 13, 5, 15, 6, 17, 7, 19, 8, 21, 9, 23,
		10, 25, 11, 27, 12, 29, 13, 31, 14, 33, 15, 35, 16, 37, 17, 39, 18, 41,
		19, 43, 20, 45, 21, 47, 22, 49, 23, 51, 24, 53, 25, 55, 26, 57, 27, 59,
		28, 61, 29, 63, 30, 65, 31, 67, 32, 69, 33, 71, 34, 73, 35, 75, 36, 77,
		37, 79, 38, 81, 39, 83, 40, 85, 41, 87, 42, 89, 43, 91, 44, 93, 45, 95,
		46, 97, 47, 99, 48, 101, 49, 103, 50, 105, 51, 107, 52, 109, 53, 111, 54,
		113, 55, 115, 56, 117, 57, 119, 58, 121, 59, 123, 60, 125, 61, 127, 62,
		129, 63, 131, 64, 133, 65, 135, 66, 137, 67, 139, 68, 141, 69, 143, 0,
		145, 0, 147, 70, 149, 71, 151, 72, 153, 73, 155, 74, 157, 75, 159, 76,
		161, 77, 163, 78, 165, 79, 167, 80, 169, 81, 171, 82, 173, 83, 175, 84,
		5, 0, 1, 2, 3, 4, 14, 3, 0, 9, 10, 12, 13, 32, 32, 2, 0, 10, 10, 13, 13,
		3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 48, 49, 2, 0, 48, 49, 95, 95, 1, 0,
		48, 57, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 3, 0, 65, 90, 95,
		95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 9, 0, 34, 34, 36, 36,
		39, 39, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 4, 0, 36,
		36, 39, 39, 92, 92, 123, 123, 4, 0, 34, 34, 36, 36, 92, 92, 123, 123, 3,
		0, 9, 10, 13, 13, 32, 32, 632, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9,
		1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0,
		17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0,
		0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0,
		0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0,
		0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1,
		0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55,
		1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0,
		63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0,
		0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0,
		0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0,
		0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1,
		0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101,
		1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0,
		0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1,
		0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0,
		123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0,
		0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137,
		1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 147, 1, 0, 0, 0,
		0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 1, 153, 1, 0, 0, 0, 1, 155, 1,
		0, 0, 0, 1, 157, 1, 0, 0, 0, 2, 159, 1, 0, 0, 0, 2, 161, 1, 0, 0, 0, 2,
		163, 1, 0, 0, 0, 3, 165, 1, 0, 0, 0, 3, 167, 1, 0, 0, 0, 3, 169, 1, 0,
		0, 0, 4, 171, 1, 0, 0, 0, 4, 173, 1, 0, 0, 0, 4, 175, 1, 0, 0, 0, 5, 178,
		1, 0, 0, 0, 7, 184, 1, 0, 0, 0, 9, 195, 1, 0, 0, 0, 11, 209, 1, 0, 0, 0,
		13, 213, 1, 0, 0, 0, 15, 216, 1, 0, 0, 0, 17, 223, 1, 0, 0, 0, 19, 229,
		1, 0, 0, 0, 21, 234, 1, 0, 0, 0, 23, 244, 1, 0, 0, 0, 25, 251, 1, 0, 0,
		0, 27, 258, 1, 0, 0, 0, 29, 265, 1, 0, 0, 0, 31, 270, 1, 0, 0, 0, 33, 276,
		1, 0, 0, 0, 35, 280, 1, 0, 0, 0, 37, 286, 1, 0, 0, 0, 39, 289, 1, 0, 0,
		0, 41, 292, 1, 0, 0, 0, 43, 295, 1, 0, 0, 0, 45, 303, 1, 0, 0, 0, 47, 308,
		1, 0, 0, 0, 49, 313, 1, 0, 0, 0, 51, 316, 1, 0, 0, 0, 53, 321, 1, 0, 0,
		0, 55, 325, 1, 0, 0, 0, 57, 331, 1, 0, 0, 0, 59, 336, 1, 0, 0, 0, 61, 342,
		1, 0, 0, 0, 63, 348, 1, 0, 0, 0, 65, 353, 1, 0, 0, 0, 67, 359, 1, 0, 0,
		0, 69, 365, 1, 0, 0, 0, 71, 373, 1, 0, 0, 0, 73, 378, 1, 0, 0, 0, 75, 380,
		1, 0, 0, 0, 77, 382, 1, 0, 0, 0, 79, 384, 1, 0, 0, 0, 81, 386, 1, 0, 0,
		0, 83, 388, 1, 0, 0, 0, 85, 390, 1, 0, 0, 0, 87, 392, 1, 0, 0, 0, 89, 394,
		1, 0, 0, 0, 91, 397, 1, 0, 0, 0, 93, 400, 1, 0, 0, 0, 95, 402, 1, 0, 0,
		0, 97, 404, 1, 0, 0, 0, 99, 406, 1, 0, 0, 0, 101, 408, 1, 0, 0, 0, 103,
		411, 1, 0, 0, 0, 105, 413, 1, 0, 0, 0, 107, 415, 1, 0, 0, 0, 109, 418,
		1, 0, 0, 0, 111, 421, 1, 0, 0, 0, 113, 424, 1, 0, 0, 0, 115, 427, 1, 0,
		0, 0, 117, 429, 1, 0, 0, 0, 119, 431, 1, 0, 0, 0, 121, 433, 1, 0, 0, 0,
		123, 435, 1, 0, 0, 0, 125, 437, 1, 0, 0, 0, 127, 440, 1, 0, 0, 0, 129,
		442, 1, 0, 0, 0, 131, 444, 1, 0, 0, 0, 133, 446, 1, 0, 0, 0, 135, 454,
		1, 0, 0, 0, 137, 518, 1, 0, 0, 0, 139, 521, 1, 0, 0, 0, 141, 525, 1, 0,
		0, 0, 143, 532, 1, 0, 0, 0, 145, 535, 1, 0, 0, 0, 147, 538, 1, 0, 0, 0,
		149, 542, 1, 0, 0, 0, 151, 548, 1, 0, 0, 0, 153, 552, 1, 0, 0, 0, 155,
		558, 1, 0, 0, 0, 157, 562, 1, 0, 0, 0, 159, 566, 1, 0, 0, 0, 161, 572,
		1, 0, 0, 0, 163, 576, 1, 0, 0, 0, 165, 582, 1, 0, 0, 0, 167, 588, 1, 0,
		0, 0, 169, 592, 1, 0, 0, 0, 171, 596, 1, 0, 0, 0, 173, 600, 1, 0, 0, 0,
		175, 605, 1, 0, 0, 0, 177, 179, 7, 0, 0, 0, 178, 177, 1, 0, 0, 0, 179,
		180, 1, 0, 0, 0, 180, 178, 1, 0, 0, 0, 180, 181, 1, 0, 0, 0, 181, 182,
		1, 0, 0, 0, 182, 183, 6, 0, 0, 0, 183, 6, 1, 0, 0, 0, 184, 185, 5, 47,
		0, 0, 185, 186, 5, 47, 0, 0, 186, 190, 1, 0, 0, 0, 187, 189, 8, 1, 0, 0,
		188, 187, 1, 0, 0, 0, 189, 192, 1, 0, 0, 0, 190, 188, 1, 0, 0, 0, 190,
		191, 1, 0, 0, 0, 191, 193, 1, 0, 0, 0, 192, 190, 1, 0, 0, 0, 193, 194,
		6, 1, 0, 0, 194, 8, 1, 0, 0, 0, 195, 196, 5, 47, 0, 0, 196, 197, 5, 42,
		0, 0, 197, 201, 1, 0, 0, 0, 198, 200, 9, 0, 0, 0, 199, 198, 1, 0, 0, 0,
		200, 203, 1, 0, 0, 0, 201, 202, 1, 0, 0, 0, 201, 199, 1, 0, 0, 0, 202,
		204, 1, 0, 0, 0, 203, 201, 1, 0, 0, 0, 204, 205, 5, 42, 0, 0, 205, 206,
		5, 47, 0, 0, 206, 207, 1, 0, 0, 0, 207, 208, 6, 2, 0, 0, 208, 10, 1, 0,
		0, 0, 209, 210, 5, 108, 0, 0, 210, 211, 5, 101, 0, 0, 211, 212, 5, 116,
		0, 0, 212, 12, 1, 0, 0, 0, 213, 214, 5, 102, 0, 0, 214, 215, 5, 110, 0,
		0, 215, 14, 1, 0, 0, 0, 216, 217, 5, 114, 0, 0, 217, 218, 5, 101, 0, 0,
		218, 219, 5, 116, 0, 0, 219, 220, 5, 117, 0, 0, 220, 221, 5, 114, 0, 0,
		221, 222, 5, 110, 0, 0, 222, 16, 1, 0, 0, 0, 223, 224, 5, 121, 0, 0, 224,
		225, 5, 105, 0, 0, 225, 226, 5, 101, 0, 0, 226, 227, 5, 108, 0, 0, 227,
		228, 5, 100, 0, 0, 228, 18, 1, 0, 0, 0, 229, 230, 5, 116, 0, 0, 230, 231,
		5, 121, 0, 0, 231, 232, 5, 112, 0, 0, 232, 233, 5, 101, 0, 0, 233, 20,
		1, 0, 0, 0, 234, 235, 5, 105, 0, 0, 235, 236, 5, 110, 0, 0, 236, 237, 5,
		116, 0, 0, 237, 238, 5, 101, 0, 0, 238, 239, 5, 114, 0, 0, 239, 240, 5,
		102, 0, 0, 240, 241, 5, 97, 0, 0, 241, 242, 5, 99, 0, 0, 242, 243, 5, 101,
		0, 0, 243, 22, 1, 0, 0, 0, 244, 245, 5, 105, 0, 0, 245, 246, 5, 109, 0,
		0, 246, 247, 5, 112, 0, 0, 247, 248, 5, 111, 0, 0, 248, 249, 5, 114, 0,
		0, 249, 250, 5, 116, 0, 0, 250, 24, 1, 0, 0, 0, 251, 252, 5, 101, 0, 0,
		252, 253, 5, 120, 0, 0, 253, 254, 5, 112, 0, 0, 254, 255, 5, 111, 0, 0,
		255, 256, 5, 114, 0, 0, 256, 257, 5, 116, 0, 0, 257, 26, 1, 0, 0, 0, 258,
		259, 5, 101, 0, 0, 259, 260, 5, 120, 0, 0, 260, 261, 5, 116, 0, 0, 261,
		262, 5, 101, 0, 0, 262, 263, 5, 114, 0, 0, 263, 264, 5, 110, 0, 0, 264,
		28, 1, 0, 0, 0, 265, 266, 5, 118, 0, 0, 266, 267, 5, 111, 0, 0, 267, 268,
		5, 105, 0, 0, 268, 269, 5, 100, 0, 0, 269, 30, 1, 0, 0, 0, 270, 271, 5,
		99, 0, 0, 271, 272, 5, 104, 0, 0, 272, 273, 5, 101, 0, 0, 273, 274, 5,
		99, 0, 0, 274, 275, 5, 107, 0, 0, 275, 32, 1, 0, 0, 0, 276, 277, 5, 116,
		0, 0, 277, 278, 5, 114, 0, 0, 278, 279, 5, 121, 0, 0, 279, 34, 1, 0, 0,
		0, 280, 281, 5, 99, 0, 0, 281, 282, 5, 97, 0, 0, 282, 283, 5, 116, 0, 0,
		283, 284, 5, 99, 0, 0, 284, 285, 5, 104, 0, 0, 285, 36, 1, 0, 0, 0, 286,
		287, 5, 105, 0, 0, 287, 288, 5, 110, 0, 0, 288, 38, 1, 0, 0, 0, 289, 290,
		5, 97, 0, 0, 290, 291, 5, 115, 0, 0, 291, 40, 1, 0, 0, 0, 292, 293, 5,
		105, 0, 0, 293, 294, 5, 115, 0, 0, 294, 42, 1, 0, 0, 0, 295, 296, 5, 101,
		0, 0, 296, 297, 5, 120, 0, 0, 297, 298, 5, 116, 0, 0, 298, 299, 5, 101,
		0, 0, 299, 300, 5, 110, 0, 0, 300, 301, 5, 100, 0, 0, 301, 302, 5, 115,
		0, 0, 302, 44, 1, 0, 0, 0, 303, 304, 5, 102, 0, 0, 304, 305, 5, 114, 0,
		0, 305, 306, 5, 111, 0, 0, 306, 307, 5, 109, 0, 0, 307, 46, 1, 0, 0, 0,
		308, 309, 5, 110, 0, 0, 309, 310, 5, 117, 0, 0, 310, 311, 5, 108, 0, 0,
		311, 312, 5, 108, 0, 0, 312, 48, 1, 0, 0, 0, 313, 314, 5, 105, 0, 0, 314,
		315, 5, 102, 0, 0, 315, 50, 1, 0, 0, 0, 316, 317, 5, 101, 0, 0, 317, 318,
		5, 108, 0, 0, 318, 319, 5, 115, 0, 0, 319, 320, 5, 101, 0, 0, 320, 52,
		1, 0, 0, 0, 321, 322, 5, 102, 0, 0, 322, 323, 5, 111, 0, 0, 323, 324, 5,
		114, 0, 0, 324, 54, 1, 0, 0, 0, 325, 326, 5, 119, 0, 0, 326, 327, 5, 104,
		0, 0, 327, 328, 5, 105, 0, 0, 328, 329, 5, 108, 0, 0, 329, 330, 5, 101,
		0, 0, 330, 56, 1, 0, 0, 0, 331, 332, 5, 116, 0, 0, 332, 333, 5, 114, 0,
		0, 333, 334, 5, 117, 0, 0, 334, 335, 5, 101, 0, 0, 335, 58, 1, 0, 0, 0,
		336, 337, 5, 102, 0, 0, 337, 338, 5, 97, 0, 0, 338, 339, 5, 108, 0, 0,
		339, 340, 5, 115, 0, 0, 340, 341, 5, 101, 0, 0, 341, 60, 1, 0, 0, 0, 342,
		343, 5, 109, 0, 0, 343, 344, 5, 97, 0, 0, 344, 345, 5, 116, 0, 0, 345,
		346, 5, 99, 0, 0, 346, 347, 5, 104, 0, 0, 347, 62, 1, 0, 0, 0, 348, 349,
		5, 99, 0, 0, 349, 350, 5, 97, 0, 0, 350, 351, 5, 115, 0, 0, 351, 352, 5,
		101, 0, 0, 352, 64, 1, 0, 0, 0, 353, 354, 5, 97, 0, 0, 354, 355, 5, 115,
		0, 0, 355, 356, 5, 121, 0, 0, 356, 357, 5, 110, 0, 0, 357, 358, 5, 99,
		0, 0, 358, 66, 1, 0, 0, 0, 359, 360, 5, 97, 0, 0, 360, 361, 5, 119, 0,
		0, 361, 362, 5, 97, 0, 0, 362, 363, 5, 105, 0, 0, 363, 364, 5, 116, 0,
		0, 364, 68, 1, 0, 0, 0, 365, 366, 5, 109, 0, 0, 366, 367, 5, 101, 0, 0,
		367, 368, 5, 116, 0, 0, 368, 369, 5, 104, 0, 0, 369, 370, 5, 111, 0, 0,
		370, 371, 5, 100, 0, 0, 371, 372, 5, 115, 0, 0, 372, 70, 1, 0, 0, 0, 373,
		374, 5, 115, 0, 0, 374, 375, 5, 101, 0, 0, 375, 376, 5, 108, 0, 0, 376,
		377, 5, 102, 0, 0, 377, 72, 1, 0, 0, 0, 378, 379, 5, 123, 0, 0, 379, 74,
		1, 0, 0, 0, 380, 381, 5, 125, 0, 0, 381, 76, 1, 0, 0, 0, 382, 383, 5, 91,
		0, 0, 383, 78, 1, 0, 0, 0, 384, 385, 5, 93, 0, 0, 385, 80, 1, 0, 0, 0,
		386, 387, 5, 40, 0, 0, 387, 82, 1, 0, 0, 0, 388, 389, 5, 41, 0, 0, 389,
		84, 1, 0, 0, 0, 390, 391, 5, 60, 0, 0, 391, 86, 1, 0, 0, 0, 392, 393, 5,
		62, 0, 0, 393, 88, 1, 0, 0, 0, 394, 395, 5, 60, 0, 0, 395, 396, 5, 61,
		0, 0, 396, 90, 1, 0, 0, 0, 397, 398, 5, 62, 0, 0, 398, 399, 5, 61, 0, 0,
		399, 92, 1, 0, 0, 0, 400, 401, 5, 58, 0, 0, 401, 94, 1, 0, 0, 0, 402, 403,
		5, 59, 0, 0, 403, 96, 1, 0, 0, 0, 404, 405, 5, 44, 0, 0, 405, 98, 1, 0,
		0, 0, 406, 407, 5, 61, 0, 0, 407, 100, 1, 0, 0, 0, 408, 409, 5, 61, 0,
		0, 409, 410, 5, 61, 0, 0, 410, 102, 1, 0, 0, 0, 411, 412, 5, 43, 0, 0,
		412, 104, 1, 0, 0, 0, 413, 414, 5, 45, 0, 0, 414, 106, 1, 0, 0, 0, 415,
		416, 5, 43, 0, 0, 416, 417, 5, 43, 0, 0, 417, 108, 1, 0, 0, 0, 418, 419,
		5, 45, 0, 0, 419, 420, 5, 45, 0, 0, 420, 110, 1, 0, 0, 0, 421, 422, 5,
		124, 0, 0, 422, 423, 5, 124, 0, 0, 423, 112, 1, 0, 0, 0, 424, 425, 5, 38,
		0, 0, 425, 426, 5, 38, 0, 0, 426, 114, 1, 0, 0, 0, 427, 428, 5, 42, 0,
		0, 428, 116, 1, 0, 0, 0, 429, 430, 5, 47, 0, 0, 430, 118, 1, 0, 0, 0, 431,
		432, 5, 33, 0, 0, 432, 120, 1, 0, 0, 0, 433, 434, 5, 63, 0, 0, 434, 122,
		1, 0, 0, 0, 435, 436, 5, 46, 0, 0, 436, 124, 1, 0, 0, 0, 437, 438, 5, 33,
		0, 0, 438, 439, 5, 61, 0, 0, 439, 126, 1, 0, 0, 0, 440, 441, 5, 124, 0,
		0, 441, 128, 1, 0, 0, 0, 442, 443, 5, 38, 0, 0, 443, 130, 1, 0, 0, 0, 444,
		445, 5, 94, 0, 0, 445, 132, 1, 0, 0, 0, 446, 447, 5, 48, 0, 0, 447, 448,
		5, 120, 0, 0, 448, 450, 1, 0, 0, 0, 449, 451, 7, 2, 0, 0, 450, 449, 1,
		0, 0, 0, 451, 452, 1, 0, 0, 0, 452, 450, 1, 0, 0, 0, 452, 453, 1, 0, 0,
		0, 453, 134, 1, 0, 0, 0, 454, 455, 5, 48, 0, 0, 455, 456, 5, 98, 0, 0,
		456, 457, 1, 0, 0, 0, 457, 461, 7, 3, 0, 0, 458, 460, 7, 4, 0, 0, 459,
		458, 1, 0, 0, 0, 460, 463, 1, 0, 0, 0, 461, 459, 1, 0, 0, 0, 461, 462,
		1, 0, 0, 0, 462, 136, 1, 0, 0, 0, 463, 461, 1, 0, 0, 0, 464, 466, 7, 5,
		0, 0, 465, 464, 1, 0, 0, 0, 466, 467, 1, 0, 0, 0, 467, 465, 1, 0, 0, 0,
		467, 468, 1, 0, 0, 0, 468, 469, 1, 0, 0, 0, 469, 473, 5, 46, 0, 0, 470,
		472, 7, 5, 0, 0, 471, 470, 1, 0, 0, 0, 472, 475, 1, 0, 0, 0, 473, 471,
		1, 0, 0, 0, 473, 474, 1, 0, 0, 0, 474, 485, 1, 0, 0, 0, 475, 473, 1, 0,
		0, 0, 476, 478, 7, 6, 0, 0, 477, 479, 7, 7, 0, 0, 478, 477, 1, 0, 0, 0,
		478, 479, 1, 0, 0, 0, 479, 481, 1, 0, 0, 0, 480, 482, 7, 5, 0, 0, 481,
		480, 1, 0, 0, 0, 482, 483, 1, 0, 0, 0, 483, 481, 1, 0, 0, 0, 483, 484,
		1, 0, 0, 0, 484, 486, 1, 0, 0, 0, 485, 476, 1, 0, 0, 0, 485, 486, 1, 0,
		0, 0, 486, 519, 1, 0, 0, 0, 487, 489, 5, 46, 0, 0, 488, 490, 7, 5, 0, 0,
		489, 488, 1, 0, 0, 0, 490, 491, 1, 0, 0, 0, 491, 489, 1, 0, 0, 0, 491,
		492, 1, 0, 0, 0, 492, 502, 1, 0, 0, 0, 493, 495, 7, 6, 0, 0, 494, 496,
		7, 7, 0, 0, 495, 494, 1, 0, 0, 0, 495, 496, 1, 0, 0, 0, 496, 498, 1, 0,
		0, 0, 497, 499, 7, 5, 0, 0, 498, 497, 1, 0, 0, 0, 499, 500, 1, 0, 0, 0,
		500, 498, 1, 0, 0, 0, 500, 501, 1, 0, 0, 0, 501, 503, 1, 0, 0, 0, 502,
		493, 1, 0, 0, 0, 502, 503, 1, 0, 0, 0, 503, 519, 1, 0, 0, 0, 504, 506,
		7, 5, 0, 0, 505, 504, 1, 0, 0, 0, 506, 507, 1, 0, 0, 0, 507, 505, 1, 0,
		0, 0, 507, 508, 1, 0, 0, 0, 508, 509, 1, 0, 0, 0, 509, 511, 7, 6, 0, 0,
		510, 512, 7, 7, 0, 0, 511, 510, 1, 0, 0, 0, 511, 512, 1, 0, 0, 0, 512,
		514, 1, 0, 0, 0, 513, 515, 7, 5, 0, 0, 514, 513, 1, 0, 0, 0, 515, 516,
		1, 0, 0, 0, 516, 514, 1, 0, 0, 0, 516, 517, 1, 0, 0, 0, 517, 519, 1, 0,
		0, 0, 518, 465, 1, 0, 0, 0, 518, 487, 1, 0, 0, 0, 518, 505, 1, 0, 0, 0,
		519, 138, 1, 0, 0, 0, 520, 522, 7, 5, 0, 0, 521, 520, 1, 0, 0, 0, 522,
		523, 1, 0, 0, 0, 523, 521, 1, 0, 0, 0, 523, 524, 1, 0, 0, 0, 524, 140,
		1, 0, 0, 0, 525, 529, 7, 8, 0, 0, 526, 528, 7, 9, 0, 0, 527, 526, 1, 0,
		0, 0, 528, 531, 1, 0, 0, 0, 529, 527, 1, 0, 0, 0, 529, 530, 1, 0, 0, 0,
		530, 142, 1, 0, 0, 0, 531, 529, 1, 0, 0, 0, 532, 533, 5, 92, 0, 0, 533,
		534, 7, 10, 0, 0, 534, 144, 1, 0, 0, 0, 535, 536, 5, 36, 0, 0, 536, 537,
		5, 123, 0, 0, 537, 146, 1, 0, 0, 0, 538, 539, 5, 39, 0, 0, 539, 540, 1,
		0, 0, 0, 540, 541, 6, 71, 1, 0, 541, 148, 1, 0, 0, 0, 542, 543, 5, 39,
		0, 0, 543, 544, 5, 39, 0, 0, 544, 545, 5, 39, 0, 0, 545, 546, 1, 0, 0,
		0, 546, 547, 6, 72, 2, 0, 547, 150, 1, 0, 0, 0, 548, 549, 5, 34, 0, 0,
		549, 550, 1, 0, 0, 0, 550, 551, 6, 73, 3, 0, 551, 152, 1, 0, 0, 0, 552,
		553, 3, 145, 70, 0, 553, 554, 1, 0, 0, 0, 554, 555, 6, 74, 4, 0, 555, 154,
		1, 0, 0, 0, 556, 559, 3, 143, 69, 0, 557, 559, 8, 11, 0, 0, 558, 556, 1,
		0, 0, 0, 558, 557, 1, 0, 0, 0, 559, 560, 1, 0, 0, 0, 560, 558, 1, 0, 0,
		0, 560, 561, 1, 0, 0, 0, 561, 156, 1, 0, 0, 0, 562, 563, 5, 39, 0, 0, 563,
		564, 1, 0, 0, 0, 564, 565, 6, 76, 5, 0, 565, 158, 1, 0, 0, 0, 566, 567,
		3, 145, 70, 0, 567, 568, 1, 0, 0, 0, 568, 569, 6, 77, 4, 0, 569, 160, 1,
		0, 0, 0, 570, 573, 3, 143, 69, 0, 571, 573, 8, 11, 0, 0, 572, 570, 1, 0,
		0, 0, 572, 571, 1, 0, 0, 0, 573, 574, 1, 0, 0, 0, 574, 572, 1, 0, 0, 0,
		574, 575, 1, 0, 0, 0, 575, 162, 1, 0, 0, 0, 576, 577, 5, 39, 0, 0, 577,
		578, 5, 39, 0, 0, 578, 579, 5, 39, 0, 0, 579, 580, 1, 0, 0, 0, 580, 581,
		6, 79, 5, 0, 581, 164, 1, 0, 0, 0, 582, 583, 3, 145, 70, 0, 583, 584, 1,
		0, 0, 0, 584, 585, 6, 80, 4, 0, 585, 166, 1, 0, 0, 0, 586, 589, 3, 143,
		69, 0, 587, 589, 8, 12, 0, 0, 588, 586, 1, 0, 0, 0, 588, 587, 1, 0, 0,
		0, 589, 590, 1, 0, 0, 0, 590, 588, 1, 0, 0, 0, 590, 591, 1, 0, 0, 0, 591,
		168, 1, 0, 0, 0, 592, 593, 5, 34, 0, 0, 593, 594, 1, 0, 0, 0, 594, 595,
		6, 82, 5, 0, 595, 170, 1, 0, 0, 0, 596, 597, 5, 123, 0, 0, 597, 598, 1,
		0, 0, 0, 598, 599, 6, 83, 4, 0, 599, 172, 1, 0, 0, 0, 600, 601, 5, 125,
		0, 0, 601, 602, 1, 0, 0, 0, 602, 603, 6, 84, 5, 0, 603, 174, 1, 0, 0, 0,
		604, 606, 7, 13, 0, 0, 605, 604, 1, 0, 0, 0, 606, 607, 1, 0, 0, 0, 607,
		605, 1, 0, 0, 0, 607, 608, 1, 0, 0, 0, 608, 609, 1, 0, 0, 0, 609, 610,
		6, 85, 6, 0, 610, 176, 1, 0, 0, 0, 32, 0, 1, 2, 3, 4, 180, 190, 201, 452,
		461, 467, 473, 478, 483, 485, 491, 495, 500, 502, 507, 511, 516, 518, 523,
		529, 558, 560, 572, 574, 588, 590, 607, 7, 0, 1, 0, 5, 1, 0, 5, 2, 0, 5,
		3, 0, 5, 4, 0, 4, 0, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ManuscriptLexerInit initializes any static state used to implement ManuscriptLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewManuscriptLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ManuscriptLexerInit() {
	staticData := &ManuscriptLexerLexerStaticData
	staticData.once.Do(manuscriptlexerLexerInit)
}

// NewManuscriptLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewManuscriptLexer(input antlr.CharStream) *ManuscriptLexer {
	ManuscriptLexerInit()
	l := new(ManuscriptLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ManuscriptLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ManuscriptLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ManuscriptLexer tokens.
const (
	ManuscriptLexerWS                      = 1
	ManuscriptLexerCOMMENT                 = 2
	ManuscriptLexerMULTI_LINE_COMMENT      = 3
	ManuscriptLexerLET                     = 4
	ManuscriptLexerFN                      = 5
	ManuscriptLexerRETURN                  = 6
	ManuscriptLexerYIELD                   = 7
	ManuscriptLexerTYPE                    = 8
	ManuscriptLexerINTERFACE               = 9
	ManuscriptLexerIMPORT                  = 10
	ManuscriptLexerEXPORT                  = 11
	ManuscriptLexerEXTERN                  = 12
	ManuscriptLexerVOID                    = 13
	ManuscriptLexerCHECK                   = 14
	ManuscriptLexerTRY                     = 15
	ManuscriptLexerCATCH                   = 16
	ManuscriptLexerIN                      = 17
	ManuscriptLexerAS                      = 18
	ManuscriptLexerIS                      = 19
	ManuscriptLexerEXTENDS                 = 20
	ManuscriptLexerFROM                    = 21
	ManuscriptLexerNULL                    = 22
	ManuscriptLexerIF                      = 23
	ManuscriptLexerELSE                    = 24
	ManuscriptLexerFOR                     = 25
	ManuscriptLexerWHILE                   = 26
	ManuscriptLexerTRUE                    = 27
	ManuscriptLexerFALSE                   = 28
	ManuscriptLexerMATCH                   = 29
	ManuscriptLexerCASE                    = 30
	ManuscriptLexerASYNC                   = 31
	ManuscriptLexerAWAIT                   = 32
	ManuscriptLexerMETHODS                 = 33
	ManuscriptLexerSELF                    = 34
	ManuscriptLexerLBRACE                  = 35
	ManuscriptLexerRBRACE                  = 36
	ManuscriptLexerLSQBR                   = 37
	ManuscriptLexerRSQBR                   = 38
	ManuscriptLexerLPAREN                  = 39
	ManuscriptLexerRPAREN                  = 40
	ManuscriptLexerLT                      = 41
	ManuscriptLexerGT                      = 42
	ManuscriptLexerLT_EQUALS               = 43
	ManuscriptLexerGT_EQUALS               = 44
	ManuscriptLexerCOLON                   = 45
	ManuscriptLexerSEMICOLON               = 46
	ManuscriptLexerCOMMA                   = 47
	ManuscriptLexerEQUALS                  = 48
	ManuscriptLexerEQUALS_EQUALS           = 49
	ManuscriptLexerPLUS                    = 50
	ManuscriptLexerMINUS                   = 51
	ManuscriptLexerPLUS_PLUS               = 52
	ManuscriptLexerMINUS_MINUS             = 53
	ManuscriptLexerPIPE_PIPE               = 54
	ManuscriptLexerAMP_AMP                 = 55
	ManuscriptLexerSTAR                    = 56
	ManuscriptLexerSLASH                   = 57
	ManuscriptLexerEXCLAMATION             = 58
	ManuscriptLexerQUESTION                = 59
	ManuscriptLexerDOT                     = 60
	ManuscriptLexerNEQ                     = 61
	ManuscriptLexerPIPE                    = 62
	ManuscriptLexerAMP                     = 63
	ManuscriptLexerCARET                   = 64
	ManuscriptLexerHEX_LITERAL             = 65
	ManuscriptLexerBINARY_LITERAL          = 66
	ManuscriptLexerFLOAT                   = 67
	ManuscriptLexerINTEGER                 = 68
	ManuscriptLexerID                      = 69
	ManuscriptLexerSINGLE_QUOTE_START      = 70
	ManuscriptLexerMULTI_QUOTE_START       = 71
	ManuscriptLexerDOUBLE_QUOTE_START      = 72
	ManuscriptLexerSINGLE_STR_INTERP_START = 73
	ManuscriptLexerSINGLE_STR_CONTENT      = 74
	ManuscriptLexerSINGLE_STR_END          = 75
	ManuscriptLexerMULTI_STR_INTERP_START  = 76
	ManuscriptLexerMULTI_STR_CONTENT       = 77
	ManuscriptLexerMULTI_STR_END           = 78
	ManuscriptLexerDOUBLE_STR_INTERP_START = 79
	ManuscriptLexerDOUBLE_STR_CONTENT      = 80
	ManuscriptLexerDOUBLE_STR_END          = 81
	ManuscriptLexerINTERP_LBRACE           = 82
	ManuscriptLexerINTERP_RBRACE           = 83
	ManuscriptLexerINTERP_WS               = 84
)

// ManuscriptLexer modes.
const (
	ManuscriptLexerSINGLE_STRING_MODE = iota + 1
	ManuscriptLexerMULTI_STRING_MODE
	ManuscriptLexerDOUBLE_STRING_MODE
	ManuscriptLexerINTERPOLATION_MODE
)
